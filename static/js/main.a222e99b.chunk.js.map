{"version":3,"sources":["components/contactListItem/ContactListItem.module.css","components/contactForm/ContactForm.module.css","components/contactList/ListAnim.module.css","components/notification/NotAnim.module.css","components/filter/Filter.module.css","components/notification/Notification.module.css","components/contactList/ContactList.module.css","components/filter/FilterAnim.module.css","AppAnim.module.css","components/contactListItem/ContactListItem.js","components/contactList/ContactList.js","components/filter/Filter.js","components/contactForm/ContactForm.js","components/notification/Notification.js","components/contactsTracker/ContactsTrackHook.js","App.js","index.js"],"names":["module","exports","ContactListItem","id","name","number","onRemove","update","onUpdate","updatedClass","styles","updated","textUpdatedClass","buttonUpdatedClass","className","wrapper","itemLabel","type","checked","onChange","inputItem","data-id","onClick","ContactList","contacts","onRemoveContact","onUpdateContact","TransitionGroup","component","list","map","item","CSSTransition","timeout","classNames","contactStyles","Filter","value","onChangeFilter","htmlFor","FilterInput","ContactForm","state","handleChange","e","target","setState","handleSubmit","preventDefault","props","onAddContact","this","onSubmit","form","label","input","formButton","disabled","Component","Notification","resetName","useEffect","timer","setTimeout","clearTimeout","notStyles","alertWrapper","alertText","toUpperCase","slice","uuidv4","require","v4","ContactsTrackerHook","useState","setContacts","filter","setFilter","doubledName","setName","previousContacts","localStorage","getItem","prContactsArr","JSON","parse","length","setItem","stringify","getVisibleContacts","contact","toLowerCase","includes","in","notificationStyles","appear","find","filterStyles","unmountOnExit","console","log","dataset","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a222e99b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"text-not-updated\":\"ContactListItem_text-not-updated__1mJeu\",\"text-updated\":\"ContactListItem_text-updated__UtswX\",\"wrapper\":\"ContactListItem_wrapper__3PRxb\",\"updated\":\"ContactListItem_updated__3YD5S\",\"not-updated\":\"ContactListItem_not-updated__2yiLR\",\"button-not-updated\":\"ContactListItem_button-not-updated__1Ti-h\",\"button-updated\":\"ContactListItem_button-updated__1K294\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__aX67z\",\"input\":\"ContactForm_input__1h3lH\",\"formButton\":\"ContactForm_formButton__34jKE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"ListAnim_enter__2CVl-\",\"enterActive\":\"ListAnim_enterActive__1roxL\",\"exit\":\"ListAnim_exit__hRFXJ\",\"exitActive\":\"ListAnim_exitActive__3XW0_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"appear\":\"NotAnim_appear__1BYDu\",\"appearActive\":\"NotAnim_appearActive__2ShfI\",\"appearDone\":\"NotAnim_appearDone__3kU_O\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FilterInput\":\"Filter_FilterInput__1H0jk\",\"Filter\":\"Filter_Filter__128BK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"alertWrapper\":\"Notification_alertWrapper__1qJA3\",\"alertText\":\"Notification_alertText__ayKAg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__1Y9Zt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"appear\":\"FilterAnim_appear__hSzfP\",\"appearActive\":\"FilterAnim_appearActive__2ZTEk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"appear\":\"AppAnim_appear__TuTdn\",\"appearActive\":\"AppAnim_appearActive__1XXKH\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './ContactListItem.module.css';\n\nconst ContactListItem = function({id,name,number,onRemove,update,onUpdate}){\n\n  const updatedClass = update ? styles.updated : styles['not-updated'];\n  const textUpdatedClass = update ? styles['text-updated'] : styles['text-not-updated'];\n  const buttonUpdatedClass= update ? styles['button-updated'] : styles['button-not-updated'];\n\n  return (\n    <li className = {updatedClass}>\n      <span className = {textUpdatedClass}>{name}: {number}</span>\n\n      <div className = {styles.wrapper}>\n        <label className = {styles.itemLabel}>update</label>\n        <input type=\"checkbox\"\n        checked = {update}\n        onChange = {onUpdate}\n        className = {styles.inputItem}\n        data-id={id}/>\n\n        <button type=\"button\" onClick={onRemove} data-id={id} className={buttonUpdatedClass}>Delete</button>\n      </div>\n    </li>\n  )\n}\n\nContactListItem.propTypes = {\n     id:PropTypes.string,\n     name: PropTypes.string.isRequired,\n     number: PropTypes.string.isRequired,\n     update:PropTypes.bool.isRequired,\n     onRemove:PropTypes.func.isRequired,\n     onUpdate: PropTypes.func.isRequired\n};\n\nexport default ContactListItem;","import React from 'react';\nimport {CSSTransition,TransitionGroup} from 'react-transition-group';\n\nimport ContactListItem from '../contactListItem/ContactListItem';\n\nimport styles from './ContactList.module.css';\nimport contactStyles from './ListAnim.module.css';\n\nimport PropTypes from 'prop-types';\n\n\nconst ContactList = ({contacts,onRemoveContact,onUpdateContact})=>(\n  <TransitionGroup component=\"ul\" className = {styles.list}>\n  {contacts.map((item)=>(\n    <CSSTransition key={item.id} timeout={250} classNames={contactStyles}>\n      <ContactListItem\n      update= {item.update}\n      {...item}\n      onRemove={onRemoveContact}\n      onUpdate={onUpdateContact}\n      />\n    </CSSTransition>\n  ))}\n</TransitionGroup>\n)\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.exact({\n     id:PropTypes.string.isRequired,\n     name: PropTypes.string.isRequired,\n     number: PropTypes.string.isRequired,\n     update:PropTypes.bool.isRequired,\n  }),).isRequired,\n  onRemoveContact: PropTypes.func.isRequired,\n  onUpdateContact: PropTypes.func.isRequired\n};\n\nexport default ContactList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Filter.module.css';\n\n\nexport default function Filter({value, onChangeFilter}){\n  return (\n    <div className={styles.Filter}>\n      <label htmlFor=\"filter\">Find contacts by name</label><br/>\n      <input type = \"text\"\n      value = {value}\n      onChange={onChangeFilter}\n      className={styles.FilterInput}\n      id=\"filter\"/>\n    </div>\n  )\n}\n\nFilter.propTypes = {\n  value:PropTypes.string.isRequired,\n  onChangeFilter: PropTypes.func.isRequired\n};","import React, {Component} from 'react';\nimport styles from './ContactForm.module.css';\n\nexport default class ContactForm extends Component{\n\n  state = {\n    name: '',\n    number: ''\n  }\n\n  handleChange=e=>{\n    const {name,value} = e.target;\n    this.setState({[name]: value})\n  };\n\n  handleSubmit=e=>{\n    const {name,number} = this.state;\n    e.preventDefault();\n    this.props.onAddContact(name, number);\n    this.setState({name: \"\", number:\"\"});\n  };\n\n  render(){\n    const {name,number} =this.state;\n\n\n    return(\n    <form onSubmit = {this.handleSubmit} className={styles.form}>\n\n      <label htmlFor=\"text\" className={styles.label}>Name</label><br/>\n      <input value={name}\n        type=\"text\"\n        onChange={this.handleChange}\n        id=\"text\"\n        name = \"name\"\n        className={styles.input}\n      />\n      <br/>\n\n      <label htmlFor=\"number\">Number</label><br/>\n      <input value={number}\n        type=\"tel\"\n        onChange={this.handleChange}\n        id=\"number\"\n        name = \"number\"\n        className={styles.input}\n\n      />\n      <br/>\n\n    <button type=\"submit\" className = {styles.formButton}  disabled={!name, !number}>Add contact</button>\n  </form>\n    )}\n}","import React,{useEffect} from 'react';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport notStyles from './Notification.module.css';\r\nimport styles from './NotAnim.module.css';\r\n\r\n\r\nconst Notification=({name=\"\",resetName})=>{\r\n\r\n  useEffect(()=>{\r\n    const timer = setTimeout(()=>{resetName()},2000);\r\n    return ()=>{\r\n      clearTimeout(timer);\r\n    }\r\n  },[]);\r\n\r\n  return(\r\n\r\n    <div className={notStyles.alertWrapper}>\r\n      <p className={notStyles.alertText}>{name && name[0].toUpperCase()+name.slice(1)} is already in the list!!!</p>\r\n    </div>\r\n\r\n  )\r\n};\r\n\r\nexport default Notification;\r\n\r\n\r\n","import React, {useState, useEffect} from 'react';\nimport {CSSTransition} from 'react-transition-group';\n\nimport ContactList from '../contactList/ContactList';\nimport Filter from '../filter/Filter';\nimport ContactForm from '../contactForm/ContactForm';\nimport Notification from '../notification/Notification';\n\nimport styles from '../contactList/ListAnim.module.css';\nimport notificationStyles from '../notification/NotAnim.module.css';\nimport filterStyles from '../filter/FilterAnim.module.css';\n\nconst { v4: uuidv4 } = require('uuid');\n\nconst ContactsTrackerHook=()=> {\n\n const[contacts,setContacts]=useState(\n   [\n    {id: 'id-1', name: 'Rosie Simpson', number: '459-12-56', update: false},\n    {id: 'id-2', name: 'Hermione Kline', number: '443-89-12',update: false},\n    {id: 'id-3', name: 'Eden Clements', number: '645-17-79',update: false},\n    {id: 'id-4', name: 'Annie Copeland', number: '227-91-26',update: false}\n  ]);\n\n  const [filter,setFilter]=useState(\"\");\n  const [doubledName,setName] = useState(\"\");\n\n  useEffect(()=>{\n    const previousContacts = localStorage.getItem('contacts');\n    const prContactsArr=JSON.parse(previousContacts);\n\n    if(previousContacts){\n      prContactsArr.length>0 && setContacts([...prContactsArr])\n    }\n  },[]);\n\n  useEffect(()=>{\n    localStorage.setItem(\"contacts\",JSON.stringify(contacts));\n  },[contacts]);\n\n  const addContact=(name,number)=>{\n    const contact = {\n      id: uuidv4(),\n      name,\n      number,\n      update: false\n    };\n\n    const namesArr = contacts.map(item=>item.name);\n\n    namesArr.find(name =>name.toLowerCase() === contact.name.toLowerCase()) ?\n      setName(name) :\n      setContacts([...contacts, contact]);\n  };\n\n  const changeFilter=e=>{\n    setFilter(e.target.value)\n  };\n\n  const resetName=()=>setName(\"\");\n\n  const getVisibleContacts=()=>{\n    return contacts.filter(contact=>\n    contact.name.toLowerCase().includes(filter.toLowerCase()))\n  };\n\n  const removeContact=e=>{\n    console.log(e.target.dataset.id);\n    setContacts([...contacts.filter(({id})=> id !== e.target.dataset.id)]);\n  };\n\n  const updateContact = e=>{\n    setContacts([...contacts.map(contact=> {\n    return  contact.id === e.target.dataset.id ?\n    {...contact, update: !contact.update} : contact\n    })\n    ])\n  };\n\n\n    return (\n      <>\n        {doubledName.length>0 &&\n          <CSSTransition\n            in={true}\n            timeout={250}\n            classNames={notificationStyles}\n            appear>\n          <Notification name={doubledName} resetName={resetName}/>\n        </CSSTransition>}\n\n        <ContactForm onAddContact = {addContact}/>\n\n        <h2>Contacts</h2>\n\n        {contacts.length>1 &&\n        <CSSTransition\n          in={true}\n          timeout={500}\n          classNames={filterStyles}\n          appear>\n          <Filter value={filter} onChangeFilter = {changeFilter}/>\n        </CSSTransition>}\n\n        {<CSSTransition\n          in={getVisibleContacts().length >0}\n          unmountOnExit\n          timeout={250}\n          classNames ={styles}\n          >\n          <ContactList contacts = {getVisibleContacts()} onRemoveContact = {removeContact}\n          onUpdateContact = {updateContact}/>\n        </CSSTransition>}\n\n      </>\n    )\n\n};\n\nexport default ContactsTrackerHook;","import React, {Component} from 'react';\nimport {CSSTransition} from 'react-transition-group';\nimport ReactDOM from 'react';\nimport ContactsTrackerHooks from './components/contactsTracker/ContactsTrackHook';\nimport styles from './AppAnim.module.css';\n\n\nconst App =()=>{\n\n    return(\n      <div className = \"container\">\n\n        <CSSTransition\n          in={true}\n          appear\n          classNames={styles}\n          timeout={250}>\n          <h1>Phonebook</h1>\n        </CSSTransition>\n\n        <ContactsTrackerHooks/>\n      </div>\n    )\n\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}